{"version":3,"sources":["reportWebVitals.js","apis/Structures.js","components/ErrorLoader.js","components/BaseTable.js","components/EveImages.js","pages/Structures.js","components/NavLinkActive.js","apis/Corporation.js","components/CorpBadge.js","components/CorpMenu.js","components/PanelLoader.js","pages/Status.js","components/CorpAssetLocSelect.js","components/ErrorBoundary.js","components/NoCorp.js","components/CorpAssetGroups.js","components/CorpSelect.js","pages/Assets.js","components/CorpAssetTable.js","pages/AssetList.js","components/CorpWalletTable.js","components/filters/RefTypeFilters.js","pages/Wallets.js","components/BridgeLink.js","components/NoData.js","pages/Bridges.js","pages/Sov.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","a","axios","get","api","console","log","data","defaults","xsrfHeaderName","ErrorLoader","Panel","Body","className","xmlns","width","height","fill","class","viewBox","d","SubRows","row","rowProps","visibleColumns","error","isLoading","colSpan","length","map","x","i","key","cells","cell","getCellProps","render","column","SubCell","value","accessor","original","colourStyles","option","styles","color","MyTooltip","message","Tooltip","id","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","textColumnFilter","count","onChange","e","target","undefined","placeholder","SelectColumnFilter","options","React","useMemo","Set","forEach","values","add","title","label","defaultValue","concat","o","defaultPropGetter","BaseTable","isFetching","columns","asyncExpandFunction","getRowProps","defaultColumn","Filter","filterTypes","text","rows","ids","filter","some","rowValue","name","hasOwnProperty","originalSubRows","reduce","p","r","ob","split","prop","toLowerCase","includes","useTable","initialState","pageSize","useFilters","useSortBy","useExpanded","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","Table","striped","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","canSort","isSorted","isSortedDesc","Glyphicon","glyph","canFilter","style","verticalAlign","isExpanded","ButtonToolbar","ButtonGroup","Button","bsStyle","onClick","disabled","active","SplitButton","onSelect","Number","MenuItem","eventKey","OverlayTrigger","placement","overlay","Date","toLocaleString","CorporationLogo","corporation_id","size","Image","src","TypeIcon","type_id","TimeAgo","addDefaultLocale","en","CorpStructures","useQuery","loadStructures","initialData","valueSort","rowA","rowB","columnId","b","Header","Cell","props","href","replace","disableSortBy","corporation_name","sortType","ReactTimeAgo","date","service","c","Label","NavLink","location","useLocation","useEffect","window","endsWith","NavItem","children","contextTypes","router","PropTypes","object","loadStatus","Array","from","Object","keys","last_updates","err","sort","corps","postCorporationRefresh","post","cookies","getItem","location_id","item_id","new_type","refType","params","type_refs","CorpBadge","mutate","useMutation","NavDropdown","action","method","Checkbox","defaultChecked","inline","FormControl","bsSize","type","CorpMenu","Navbar","fluid","collapseOnSelect","Brand","Toggle","Collapse","Nav","PanelLoader","wrap","CorpStatus","corp","Heading","corporation","marginBottom","h","chars","tokens","update","parse","CharAssetLocSelect","setLocation","loadAssetLocations","isDisabled","ErrorBoundary","errorInfo","this","setState","Component","CorpLoader","CharAssetGroups","loadAssetGroups","group","items","CorpSelect","setCorporation","CorpAssets","useState","setCorp","CorpAssetLocSelect","CorpAssetGroups","SubRowAsync","loadAssetContents","CorpAssetTable","loadAssetList","renderRowSubComponent","useCallback","expand","getToggleRowExpandedProps","cellProps","CorpAssetLists","setAPI","checked","CorpWalletTable","refTypes","loadWallet","refetchOnWindowFocus","RefTypeSelect","labelText","loadRefTypes","ref","isMulti","CorpWallet","ref_types","setRefs","entry","join","BridgeLink","start","known","end","system_name","ozone","expires","flexGrow","textAlign","ProgressBar","margin","marginLeft","marginRight","activefalse","now","DataMessage","Bridges","loadBridges","borderBottom","levels_a","levels_b","push","Math","min","bridgePair","Sov","loadSov","regionFilter","setRegion","constellationFilter","setConstellation","upgradesFilter","setUpgrades","stateFilter","_upgrades","_state","_region","_constellation","_system","system","upgrades","upgrade","rgn","const","viewData","last","next","every","states","n","u","status","queryClient","QueryClient","ReactDOM","StrictMode","client","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.f8517d6b.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nexport async function loadStructures() {\n  const api = await axios.get(`/audit/api/corp/structures`);\n  console.log(`get structures in api 1`);\n  return api.data;\n}\n","import React from \"react\";\nimport { Panel } from \"react-bootstrap\";\nimport \"./PanelLoader.css\";\n\nexport const ErrorLoader = () => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <div className=\"text-center\">\n        <div className=\"error-size bottom-text\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100\"\n            height=\"100\"\n            fill=\"currentColor\"\n            class=\"bi bi-exclamation-triangle error-anim\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\" />\n            <path d=\"M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z\" />\n          </svg>\n        </div>\n        <h3 className=\"text-margin\">Error Loading Component</h3>\n      </div>\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { Button, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport {\n  useTable,\n  useFilters,\n  usePagination,\n  useSortBy,\n  useExpanded,\n} from \"react-table\";\nimport Select from \"react-select\";\nimport { Bars } from \"@agney/react-loading\";\nimport {\n  ButtonToolbar,\n  ButtonGroup,\n  Glyphicon,\n  MenuItem,\n  SplitButton,\n  Table,\n} from \"react-bootstrap\";\nimport \"./BaseTable.css\";\nimport { ErrorLoader } from \"../components/ErrorLoader\";\n\nexport function SubRows({\n  row,\n  rowProps,\n  visibleColumns,\n  data,\n  error,\n  isLoading,\n}) {\n  if (isLoading) {\n    return (\n      <tr>\n        <td />\n        <td colSpan={visibleColumns.length - 1}>Loading...</td>\n      </tr>\n    );\n  }\n  if (error) {\n    return (\n      <tr>\n        <td />\n        <td colSpan={visibleColumns.length - 1}>Unable to Fetch from API!</td>\n      </tr>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <tr>\n        <td />\n        <td colSpan={visibleColumns.length - 1}>Empty!</td>\n      </tr>\n    );\n  }\n\n  // error handling here :)\n\n  return (\n    <>\n      {data.map((x, i) => {\n        return (\n          <tr {...rowProps} key={`${rowProps.key}-expanded-${i}`}>\n            {row.cells.map((cell) => {\n              return (\n                <td {...cell.getCellProps()}>\n                  {cell.render(cell.column.SubCell ? \"SubCell\" : \"Cell\", {\n                    value: cell.column.accessor && cell.column.accessor(x, i),\n                    row: { ...row, original: x },\n                  })}\n                </td>\n              );\n            })}\n          </tr>\n        );\n      })}\n    </>\n  );\n}\n\nexport const colourStyles = {\n  option: (styles) => {\n    return {\n      ...styles,\n      color: \"black\",\n    };\n  },\n};\n\nfunction MyTooltip({ message }) {\n  return <Tooltip id=\"character_tooltip\">{message}</Tooltip>;\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  return <></>;\n}\n\nexport function textColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      className=\"form-control\"\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  );\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nexport function SelectColumnFilter({\n  column: { setFilter, filterValue, preFilteredRows, id },\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    if (!preFilteredRows) {\n      return [];\n    }\n    preFilteredRows.forEach((row) => {\n      if (row.values[id] !== null) {\n        if (typeof row.values[id] === \"object\") {\n          options.add(row.values[id][\"name\"]);\n        } else {\n          options.add(row.values[id]);\n        }\n      }\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  // Render a multi-select box\n  return (\n    <Select\n      key={filterValue}\n      title={filterValue}\n      onChange={(e) => setFilter(e.value)}\n      value={{ label: filterValue || \"All\" }}\n      defaultValue={{ label: \"All\" }}\n      styles={colourStyles}\n      options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n        options.map((o, i) => {\n          return { id: i, value: o, label: o };\n        })\n      )}\n    />\n  );\n}\n\nconst defaultPropGetter = () => ({});\n\nfunction strToKey(keyString, ob) {\n  return keyString.split(\".\").reduce(function (p, prop) {\n    return p[prop];\n  }, ob);\n}\n\nexport const BaseTable = ({\n  isLoading,\n  isFetching,\n  data,\n  error,\n  columns,\n  asyncExpandFunction,\n  getRowProps = defaultPropGetter,\n}) => {\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  const filterTypes = React.useMemo(\n    () => ({\n      text: (rows, ids, filterValue) => {\n        return rows.filter((row) => {\n          return ids.some((id) => {\n            if (!filterValue) {\n              return true;\n            } else {\n              let rowValue = row.values[id];\n              if (typeof rowValue === \"object\") {\n                rowValue = rowValue.name;\n              }\n              if (row.hasOwnProperty(\"originalSubRows\")) {\n                rowValue += row.originalSubRows.reduce((p, r) => {\n                  return (p += \" \" + strToKey(id, r));\n                }, \"\");\n              }\n              return rowValue\n                ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                : false;\n            }\n          });\n        });\n      },\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    visibleColumns,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes,\n      initialState: { pageSize: 20 },\n    },\n    useFilters,\n    useSortBy,\n    useExpanded,\n    usePagination\n  );\n\n  if (isLoading)\n    return (\n      <div className=\"col-xs-12 text-center\">\n        <Bars className=\"spinner-size\" />\n      </div>\n    );\n\n  if (error) return <ErrorLoader />;\n\n  return (\n    <>\n      <Table striped>\n        <thead {...getTableProps()}>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  {/* Add a sort direction indicator */}\n                  <span className=\"pull-right\">\n                    {column.canSort ? (\n                      column.isSorted ? (\n                        column.isSortedDesc ? (\n                          <Glyphicon glyph=\"sort-by-attributes-alt\" />\n                        ) : (\n                          <Glyphicon glyph=\"sort-by-attributes\" />\n                        )\n                      ) : (\n                        <Glyphicon glyph=\"sort\" />\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n            const rowProps = getRowProps(row);\n            return (\n              <>\n                <tr {...row.getRowProps(rowProps)}>\n                  {row.cells.map((cell) => {\n                    return (\n                      <td\n                        style={{ verticalAlign: \"middle\" }}\n                        {...cell.getCellProps()}\n                      >\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n                {row.isExpanded &&\n                  asyncExpandFunction({ row, rowProps, visibleColumns })}\n              </>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div className=\"pagination pull-right\">\n        <ButtonToolbar>\n          <ButtonGroup>\n            <Button\n              bsStyle=\"success\"\n              onClick={() => gotoPage(0)}\n              disabled={!canPreviousPage}\n            >\n              <Glyphicon glyph=\"step-backward\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => previousPage()}\n              disabled={!canPreviousPage}\n            >\n              <Glyphicon glyph=\"triangle-left\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => nextPage()}\n              disabled={!canNextPage}\n            >\n              <Glyphicon glyph=\"triangle-right\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => gotoPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              <Glyphicon glyph=\"step-forward\" />\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button active bsStyle=\"success\">\n              {\"Page Size:\"}\n            </Button>{\" \"}\n            <SplitButton\n              id=\"pageSizeDropdown\"\n              bsStyle=\"success\"\n              title={pageSize}\n              onSelect={(e) => {\n                setPageSize(Number(e));\n              }}\n            >\n              {[20, 50, 100, 1000000].map((pageSize) => (\n                <MenuItem\n                  id={pageSize}\n                  key={pageSize}\n                  eventKey={pageSize}\n                  value={pageSize}\n                >\n                  Show {pageSize}\n                </MenuItem>\n              ))}\n            </SplitButton>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n      <div className=\"pagination pull-left\">\n        <ButtonGroup>\n          <Button active bsStyle=\"info\">\n            {\n              <>\n                {pageOptions.length > 0 ? (\n                  <>\n                    Page{\" \"}\n                    <strong>\n                      {pageIndex + 1} of {pageOptions.length}\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    Page <strong>- of -</strong>\n                  </>\n                )}\n              </>\n            }\n          </Button>{\" \"}\n          {isFetching ? (\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={MyTooltip({ message: \"Refreshing Data\" })}\n            >\n              <Button bsStyle=\"info\">\n                <Glyphicon\n                  className=\"glyphicon-refresh-animate\"\n                  glyph=\"refresh\"\n                />\n              </Button>\n            </OverlayTrigger>\n          ) : (\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={MyTooltip({\n                message: \"Data Loaded: \" + new Date().toLocaleString(),\n              })}\n            >\n              <Button bsStyle=\"info\">\n                <Glyphicon glyph=\"ok\" />\n              </Button>\n            </OverlayTrigger>\n          )}\n        </ButtonGroup>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Image } from \"react-bootstrap\";\n\nexport const CharacterPortrait = ({ character_id, size = 256 }) => {\n  return (\n    <Image\n      src={`https://images.evetech.net/characters/${character_id}/portrait?size=${size}`}\n    />\n  );\n};\n\nexport const CorporationLogo = ({ corporation_id, size = 256 }) => {\n  return (\n    <Image\n      src={`https://images.evetech.net/corporations/${corporation_id}/logo?size=${size}`}\n    />\n  );\n};\n\nexport const AllianceLogo = ({ alliance_id, size = 256 }) => {\n  return (\n    <Image\n      src={`https://images.evetech.net/alliances/${alliance_id}/logo?size=${size}`}\n    />\n  );\n};\n\nexport const TypeIcon = ({ type_id, size = 64 }) => {\n  return (\n    <Image\n      className=\"img-circle\"\n      src={`https://images.evetech.net/types/${type_id}/icon?size=${size}`}\n    />\n  );\n};\n","import React from \"react\";\nimport { Panel, Label } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { loadStructures } from \"../apis/Structures\";\nimport Select from \"react-select\";\nimport {\n  BaseTable,\n  SelectColumnFilter,\n  textColumnFilter,\n  colourStyles,\n} from \"../components/BaseTable\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport { TypeIcon } from \"../components/EveImages\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en.json\";\nimport { CorporationLogo } from \"../components/EveImages\";\n\nTimeAgo.addDefaultLocale(en);\n\nexport const CorpStructures = () => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"stuctures\"],\n    () => loadStructures(),\n    {\n      initialData: [],\n    }\n  );\n\n  const valueSort = React.useMemo(\n    () => (rowA, rowB, columnId) => {\n      const a = rowA.values[columnId];\n      const b = rowB.values[columnId];\n      if ((a === null) | (b === null)) {\n        return 1; //null at end\n      }\n      return a > b ? 1 : -1;\n    },\n    []\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"System\",\n        accessor: \"location\",\n        Filter: SelectColumnFilter,\n        filter: \"text\",\n        Cell: (props) => (\n          <a\n            href={\n              \"https://evemaps.dotlan.net/system/\" +\n              props.value.name.replace(\" \", \"_\")\n            }\n          >\n            {props.value.name}\n          </a>\n        ),\n      },\n      {\n        Header: \"Structure\",\n        accessor: \"name\",\n        Filter: textColumnFilter,\n        filter: \"text\",\n      },\n      {\n        Header: \"Type\",\n        accessor: \"type\",\n        disableSortBy: true,\n        Filter: SelectColumnFilter,\n        filter: \"text\",\n        Cell: (props) => (\n          <div className=\"flex-image-text\">\n            <div className=\"pull-left\">\n              <TypeIcon type_id={props.value.id}></TypeIcon>\n            </div>\n            <div className=\"pull-left\">{props.value.name}</div>\n          </div>\n        ),\n      },\n      {\n        Header: \"Owner\",\n        accessor: \"owner\",\n        disableSortBy: true,\n        Filter: ({\n          column: { setFilter, filterValue, preFilteredRows, id },\n        }) => {\n          const options = React.useMemo(() => {\n            const options = new Set();\n            if (!preFilteredRows) {\n              return [];\n            }\n            preFilteredRows.forEach((row) => {\n              if (row.values[id] !== null) {\n                options.add(row.values[id].corporation_name);\n              }\n            });\n            return [...options.values()];\n          }, [id, preFilteredRows]);\n          return (\n            <Select\n              key={filterValue}\n              title={filterValue}\n              onChange={(e) => setFilter(e.value)}\n              value={{ label: filterValue || \"All\" }}\n              defaultValue={{ label: \"All\" }}\n              styles={colourStyles}\n              options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n                options.map((o, i) => {\n                  return { id: i, value: o, label: o };\n                })\n              )}\n            />\n          );\n        },\n        filter: (rows, ids, filterValue) => {\n          return rows.filter((row) => {\n            return ids.some((id) => {\n              if (!filterValue) {\n                return true;\n              } else {\n                let rowValue = row.values[id].corporation_name;\n                return rowValue\n                  ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                  : false;\n              }\n            });\n          });\n        },\n        Cell: (props) => (\n          <div className=\"flex-image-text\">\n            <div className=\"pull-left\">\n              <CorporationLogo\n                corporation_id={props.value.corporation_id}\n                size={32}\n              ></CorporationLogo>\n            </div>\n            <div className=\"pull-left\">{props.value.corporation_name}</div>\n          </div>\n        ),\n      },\n      {\n        Header: \"Fuel Expiry\",\n        accessor: \"fuel_expiry\",\n        sortType: valueSort,\n        Cell: (props) => (\n          <div>{props.value ? <ReactTimeAgo date={props.value} /> : \"\"}</div>\n        ),\n      },\n      {\n        Header: \"State\",\n        accessor: \"state\",\n        Filter: SelectColumnFilter,\n        disableSortBy: true,\n        filter: \"text\",\n      },\n      {\n        Header: \"Services\",\n        accessor: \"services\",\n        disableSortBy: true,\n        Filter: ({\n          column: { setFilter, filterValue, preFilteredRows, id },\n        }) => {\n          const options = React.useMemo(() => {\n            const options = new Set();\n            if (!preFilteredRows) {\n              return [];\n            }\n            preFilteredRows.forEach((row) => {\n              if (row.values[id] !== null) {\n                row.values[id].forEach((service) => {\n                  options.add(service.name);\n                });\n              }\n            });\n            return [...options.values()];\n          }, [id, preFilteredRows]);\n          return (\n            <Select\n              key={filterValue}\n              title={filterValue}\n              onChange={(e) => setFilter(e.value)}\n              value={{ label: filterValue || \"All\" }}\n              defaultValue={{ label: \"All\" }}\n              styles={colourStyles}\n              options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n                options.map((o, i) => {\n                  return { id: i, value: o, label: o };\n                })\n              )}\n            />\n          );\n        },\n        filter: (rows, ids, filterValue) => {\n          return rows.filter((row) => {\n            return ids.some((id) => {\n              if (!filterValue) {\n                return true;\n              } else {\n                let rowValue = row.values[id].reduce((p, c) => {\n                  return p + \"  \" + c.name;\n                }, \"\");\n                return rowValue\n                  ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                  : false;\n              }\n            });\n          });\n        },\n        Cell: (props) =>\n          props.value ? (\n            <div className=\"text-center\">\n              {props.value.map((service) => {\n                return (\n                  <Label\n                    className=\"padded-label\"\n                    bsStyle={service.state === \"online\" ? \"primary\" : \"danger\"}\n                  >\n                    {service.name}\n                  </Label>\n                );\n              })}\n            </div>\n          ) : (\n            <></>\n          ),\n      },\n    ],\n    [valueSort]\n  );\n\n  return (\n    <Panel.Body>\n      <BaseTable {...{ isLoading, isFetching, data, columns, error }} />\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { NavItem } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst NavLink = (props) => {\n  const location = useLocation();\n\n  useEffect(() => {}, [location]);\n\n  var isActive = window.location.href.endsWith(props.href);\n  var className = isActive ? \"active\" : \"\";\n\n  return (\n    <NavItem className={className} {...props}>\n      {props.children}\n    </NavItem>\n  );\n};\n\nNavLink.contextTypes = {\n  router: PropTypes.object,\n};\n\nexport default NavLink;\n","import axios from \"axios\";\nimport cookies from \"js-cookies\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nexport async function loadStatus() {\n  const api = await axios.get(`/audit/api/corp/list`);\n  console.log(`got corp status in api`);\n  const headers = Array.from(\n    new Set(\n      api.data.reduce((p, c) => {\n        try {\n          return p.concat(Object.keys(c.last_updates));\n        } catch (err) {\n          return p;\n        }\n      }, [])\n    )\n  );\n  headers.sort();\n\n  const data = {\n    corps: api.data,\n    headers: headers,\n  };\n  return data;\n}\n\nexport async function postCorporationRefresh() {\n  console.log(`Sent Corp refresh`);\n  const api = await axios.post(`/audit/api/corporation/refresh`, {\n    headers: { \"X-CSRFToken\": cookies.getItem(\"csrftoken\") },\n  });\n  return api.data;\n}\n\nexport async function loadAssetLocations(corporation_id) {\n  const api = await axios.get(\n    `/audit/api/corporation/${corporation_id}/asset/locations`\n  );\n  console.log(`get asset locations in api ${corporation_id}`);\n  return api.data;\n}\n\nexport async function loadAssetGroups(corporation_id, location_id) {\n  const api = await axios.get(\n    `/audit/api/corporation/${corporation_id}/asset/${location_id}/groups`\n  );\n  console.log(`get asset groups in api ${corporation_id} ${location_id}`);\n  return api.data;\n}\n\nexport async function loadAssetContents(item_id) {\n  const api = await axios.get(\n    `/audit/api/corporation/asset/${item_id}/contents`\n  );\n  console.log(`get asset contents in api ${item_id}`);\n  return api.data;\n}\n\nexport async function loadAssetList(corporation_id, location_id, new_type) {\n  const api = await axios.get(\n    `/audit/api/corporation/${corporation_id}/asset/${location_id}/list?new_asset_tree=${new_type}`\n  );\n  console.log(`get asset list in api ${corporation_id} ${location_id}`);\n  return api.data;\n}\n\nexport async function loadWallet(corporation_id, refType = \"\", page = 1) {\n  const api = await axios.get(\n    `/audit/api/corporation/${corporation_id}/wallet`,\n    { params: { type_refs: refType, page: page } }\n  );\n  console.log(`get wallet in api ${corporation_id}`);\n  return api.data;\n}\n\nexport async function loadRefTypes() {\n  const api = await axios.get(`/audit/api/corporation/wallettypes`);\n  console.log(`get wallet types in api`);\n  return api.data;\n}\n\nexport async function loadBridges() {\n  const api = await axios.get(`/audit/api/corp/gates`);\n  console.log(`get bridges in api`);\n  return api.data;\n}\n\nexport async function loadSov() {\n  const api = await axios.get(`/audit/api/alliance/sov`);\n  console.log(`get sov in api`);\n  return api.data;\n}\n","import React from \"react\";\n\nimport {\n  Glyphicon,\n  NavItem,\n  Checkbox,\n  NavDropdown,\n  FormControl,\n} from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap/lib/Navbar\";\nimport { useMutation } from \"react-query\";\nimport { postCorporationRefresh } from \"../apis/Corporation\";\n\nfunction CorpBadge() {\n  const { mutate } = useMutation(postCorporationRefresh);\n\n  return (\n    <>\n      <NavDropdown title=\"Add Corporate Token\">\n        <form\n          action=\"/audit/corp/add_options\"\n          method=\"get\"\n          style={{ width: \"350px\" }}\n        >\n          <Form>\n            <Checkbox\n              style={{ width: \"100%\" }}\n              defaultChecked={true}\n              inline={true}\n              id=\"s\"\n              name=\"s\"\n            >\n              Structures\n            </Checkbox>\n            <br />\n            <Checkbox\n              style={{ width: \"100%\" }}\n              defaultChecked={false}\n              inline={true}\n              id=\"a\"\n              name=\"a\"\n            >\n              Assets\n            </Checkbox>\n            <h6>Assets Enables LO Levels in Bridges</h6>\n\n            <Checkbox\n              style={{ width: \"100%\" }}\n              defaultChecked={false}\n              inline={true}\n              id=\"m\"\n              name=\"m\"\n            >\n              Moons\n            </Checkbox>\n            <h6>Moons enable Active Observation Tracking</h6>\n\n            <Checkbox\n              style={{ width: \"100%\" }}\n              defaultChecked={false}\n              inline={true}\n              id=\"w\"\n              name=\"w\"\n            >\n              Wallets\n            </Checkbox>\n            <br />\n            <br />\n            <FormControl\n              style={{ width: \"100%\" }}\n              bsSize=\"small\"\n              type=\"submit\"\n              value=\"Add Token\"\n            />\n          </Form>\n        </form>\n      </NavDropdown>\n      <NavItem onClick={() => mutate()}>\n        <Glyphicon glyph=\"refresh\" />\n      </NavItem>\n    </>\n  );\n}\n\nexport default CorpBadge;\n","import React from \"react\";\nimport { Nav, NavDropdown } from \"react-bootstrap\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport NavLink from \"./NavLinkActive\";\nimport \"./Menu.css\";\nimport CorpBadge from \"./CorpBadge\";\n\nconst CorpMenu = () => {\n  return (\n    <Navbar fluid collapseOnSelect>\n      <Navbar.Header>\n        <Navbar.Brand>Corporation Audit</Navbar.Brand>\n        <Navbar.Toggle />\n      </Navbar.Header>\n      <Navbar.Collapse>\n        <Nav>\n          <NavLink key=\"Structures\" href={`#/structures`}>\n            Structures\n          </NavLink>\n          <NavLink key=\"Wallets\" href={`#/wallets`}>\n            Wallets\n          </NavLink>\n          <NavLink key=\"Assetgroups\" href={`#/assetgroup`}>\n            Asset Overview\n          </NavLink>\n          <NavLink key=\"assetlists\" href={`#/assetlist`}>\n            Asset List\n          </NavLink>\n          <NavDropdown title=\"Dashboards\">\n            <NavLink key=\"bridges\" href={`#/bridges`}>\n              Bridges\n            </NavLink>\n            <NavLink key=\"sov\" href={`#/sov`}>\n              Sov Upgrades\n            </NavLink>\n          </NavDropdown>\n        </Nav>\n\n        <Nav className=\"pull-right\">\n          <CorpBadge />\n          <NavLink key=\"Status\" href={`#/status`}>\n            Corporations\n          </NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default CorpMenu;\n","import React from \"react\";\nimport { Bars } from \"@agney/react-loading\";\nimport { Panel } from \"react-bootstrap\";\nimport \"./PanelLoader.css\";\n\nexport const PanelLoader = () => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <Bars className=\"spinner-size\" />\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { Label, Table } from \"react-bootstrap\";\nimport { Panel, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport { useQuery } from \"react-query\";\nimport { loadStatus } from \"../apis/Corporation\";\nimport { PanelLoader } from \"../components/PanelLoader\";\nimport { ErrorLoader } from \"../components/ErrorLoader\";\nimport { CorporationLogo } from \"../components/EveImages\";\n\nfunction MyTooltip({ message }) {\n  return (\n    <Tooltip wrap id=\"character_tooltip\">\n      {message}\n    </Tooltip>\n  );\n}\n\nconst CorpStatus = () => {\n  const { isLoading, error, data } = useQuery([\"corp-status\"], () =>\n    loadStatus()\n  );\n\n  if (isLoading) return <PanelLoader />;\n\n  if (error) return <ErrorLoader />;\n\n  return (\n    <Panel.Body className=\"flex-container\">\n      {data.corps.map((corp) => {\n        return (\n          <Panel className={\"flex-child\"}>\n            <Panel.Heading>\n              <h4 className={\"text-center\"}>\n                {corp.corporation.corporation_name}\n              </h4>\n            </Panel.Heading>\n            <Panel.Body className=\"flex-body\">\n              <div className=\"text-center\">\n                <CorporationLogo\n                  corporation_id={corp.corporation.corporation_id}\n                  size={256}\n                />\n              </div>\n              <h4 className={\"text-center\"}>Update Status</h4>\n              <Table striped style={{ marginBottom: 0 }}>\n                <thead>\n                  <tr>\n                    <th>Update</th>\n                    <th className=\"text-right\">Last Run</th>\n                  </tr>\n                </thead>\n              </Table>\n              <div className={\"table-div\"}>\n                <Table striped>\n                  <tbody>\n                    {data.headers.map((h) => {\n                      return (\n                        <tr>\n                          <td>\n                            {h}{\" \"}\n                            <OverlayTrigger\n                              placement=\"top\"\n                              overlay={MyTooltip({\n                                message:\n                                  \"Characters with Roles in Audit vs Tokens Available.\",\n                              })}\n                            >\n                              <Label\n                                className=\"pull-right\"\n                                bsStyle=\"info\"\n                                size={\"small\"}\n                              >\n                                Chars/Tokens: {corp.last_updates[h].chars}/\n                                {corp.last_updates[h].tokens}\n                              </Label>\n                            </OverlayTrigger>\n                          </td>\n                          <td className=\"text-right\">\n                            {corp.last_updates[h].update ? (\n                              <ReactTimeAgo\n                                date={Date.parse(corp.last_updates[h].update)}\n                              />\n                            ) : (\n                              <>{\"Never\"}</>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </div>\n            </Panel.Body>\n          </Panel>\n        );\n      })}\n    </Panel.Body>\n  );\n};\n\nexport default CorpStatus;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport Select from \"react-select\";\nimport { loadAssetLocations } from \"../apis/Corporation\";\n\nconst colourStyles = {\n  option: (styles) => {\n    return {\n      ...styles,\n      color: \"black\",\n    };\n  },\n};\n\nconst CharAssetLocSelect = ({ corporation_id, setLocation }) => {\n  const { isLoading, data } = useQuery([\"asset_loc\", corporation_id], () =>\n    loadAssetLocations(corporation_id)\n  );\n\n  return (\n    <div className=\"flex-label-container\">\n      <div className=\"flex-label\">\n        <h5>Location Select:</h5>\n      </div>\n      <Select\n        className=\"flex-select\"\n        isLoading={isLoading}\n        styles={colourStyles}\n        options={data}\n        isDisabled={!corporation_id ? true : false}\n        onChange={(e) => setLocation(e.value)}\n      />\n    </div>\n  );\n};\n\nexport default CharAssetLocSelect;\n","import React from \"react\";\nimport { ErrorLoader } from \"./ErrorLoader\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return <ErrorLoader />;\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { Panel } from \"react-bootstrap\";\nimport \"./PanelLoader.css\";\n\nexport const CorpLoader = () => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <div className=\"text-center\">\n        <div className=\"error-size bottom-text\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100\"\n            height=\"100\"\n            fill=\"currentColor\"\n            class=\"bi bi-arrow-up-short arrow-anim\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5z\"\n            />\n          </svg>\n        </div>\n        <h3 className=\"text-margin\">Please Select Corporation</h3>\n      </div>\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { Panel, Glyphicon } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { loadAssetGroups } from \"../apis/Corporation\";\nimport { Table } from \"react-bootstrap\";\nimport { PanelLoader } from \"./PanelLoader\";\nimport { ErrorLoader } from \"./ErrorLoader\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport { CorpLoader } from \"./NoCorp\";\n\nconst CharAssetGroups = ({ corporation_id = 0, location_id = 0 }) => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"assetGroups\", corporation_id, location_id],\n    () => loadAssetGroups(corporation_id, location_id)\n  );\n\n  if (corporation_id === 0) return <CorpLoader />;\n\n  if (isLoading) return <PanelLoader />;\n\n  if (error) return <ErrorLoader />;\n\n  return (\n    <ErrorBoundary>\n      <div className=\"flex-container\">\n        {data.map((group) => {\n          return (\n            <Panel key={group.name} className=\"flex-child\">\n              <Panel.Heading>\n                <h4 className={\"text-center\"}>\n                  {group.name}\n                  {isFetching ? (\n                    <Glyphicon\n                      className=\"glyphicon-refresh-animate pull-right\"\n                      glyph=\"refresh\"\n                    />\n                  ) : (\n                    <></>\n                  )}\n                </h4>\n              </Panel.Heading>\n              <Panel.Body className=\"flex-body\">\n                <Table striped style={{ marginBottom: 0 }}>\n                  <thead>\n                    <tr key={\"head \" + group.name}>\n                      <th>Group</th>\n                      <th className=\"text-right\">Count</th>\n                    </tr>\n                  </thead>\n                </Table>\n                <div className={\"table-div\"}>\n                  <Table striped>\n                    <tbody>\n                      {group.items.map((h) => {\n                        return (\n                          <tr key={group.name + \" \" + h.label + \" \" + h.value}>\n                            <td>{h.label}</td>\n                            <td className=\"text-right no-wrap\">\n                              {h.value.toLocaleString()}\n                            </td>\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                </div>\n              </Panel.Body>\n            </Panel>\n          );\n        })}\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nexport default CharAssetGroups;\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport Select from \"react-select\";\nimport { loadStatus } from \"../apis/Corporation\";\n\nconst colourStyles = {\n  option: (styles) => {\n    return {\n      ...styles,\n      color: \"black\",\n    };\n  },\n};\n\nconst CorpSelect = ({ setCorporation }) => {\n  const { isLoading, data } = useQuery([\"corp-status\"], () => loadStatus());\n  let options = [];\n  if (!isLoading) {\n    options = data.corps.map((corp) => {\n      return {\n        value: corp.corporation.corporation_id,\n        label: corp.corporation.corporation_name,\n      };\n    });\n    if (data.corps.length === 1) {\n      setCorporation(options[0].value);\n    }\n  }\n  return (\n    <div className=\"flex-label-container\">\n      <div className=\"flex-label\">\n        <h5>Corporation Select:</h5>\n      </div>\n      <Select\n        className=\"flex-select\"\n        isLoading={isLoading}\n        styles={colourStyles}\n        options={options}\n        onChange={(e) => setCorporation(e.value)}\n      />\n    </div>\n  );\n};\n\nexport default CorpSelect;\n","import React, { useState } from \"react\";\nimport { Panel } from \"react-bootstrap\";\nimport CorpAssetLocSelect from \"../components/CorpAssetLocSelect\";\nimport CorpAssetGroups from \"../components/CorpAssetGroups\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport CorpSelect from \"../components/CorpSelect\";\n\nconst CorpAssets = () => {\n  const [location, setLocation] = useState(0);\n  const [corporation_id, setCorp] = useState(0);\n\n  return (\n    <ErrorBoundary>\n      <Panel.Body className=\"flex-container-vert-fill\">\n        <CorpSelect setCorporation={setCorp} />\n        <CorpAssetLocSelect\n          corporation_id={corporation_id}\n          setLocation={setLocation}\n        />\n        <CorpAssetGroups\n          corporation_id={corporation_id}\n          location_id={location}\n        />\n      </Panel.Body>\n    </ErrorBoundary>\n  );\n};\n\nexport default CorpAssets;\n","import React from \"react\";\nimport { Panel, Glyphicon } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { loadAssetList, loadAssetContents } from \"../apis/Corporation\";\nimport {\n  BaseTable,\n  SubRows,\n  SelectColumnFilter,\n  textColumnFilter,\n} from \"../components/BaseTable\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport { CorpLoader } from \"./NoCorp\";\n\nfunction SubRowAsync({ row, rowProps, visibleColumns }) {\n  const { isLoading, error, data } = useQuery(\n    [\"lazy-load\", row.original.id],\n    () => loadAssetContents(row.original.id)\n  );\n\n  if (!isLoading) {\n    row.originalSubRows = data;\n  }\n\n  return (\n    <SubRows\n      row={row}\n      rowProps={rowProps}\n      visibleColumns={visibleColumns}\n      data={data}\n      error={error}\n      isLoading={isLoading}\n    />\n  );\n}\n\nconst CorpAssetTable = ({ corporation_id, new_type, location_id = 0 }) => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"assetList\", corporation_id, location_id, new_type],\n    () => loadAssetList(corporation_id, location_id, new_type),\n    { initialData: [] }\n  );\n  const renderRowSubComponent = React.useCallback(\n    ({ row, rowProps, visibleColumns }) => (\n      <SubRowAsync\n        row={row}\n        rowProps={rowProps}\n        visibleColumns={visibleColumns}\n      />\n    ),\n    []\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        // Make an expander cell\n        Header: () => null, // No header\n        id: \"expander\", // It needs an ID\n        Cell: ({ row }) =>\n          row.original.expand ? (\n            <span {...row.getToggleRowExpandedProps()}>\n              {row.isExpanded ? (\n                <Glyphicon glyph=\"minus-sign\" />\n              ) : (\n                <Glyphicon glyph=\"plus-sign\" />\n              )}\n            </span>\n          ) : (\n            <></>\n          ),\n        // We can override the cell renderer with a SubCell to be used with an expanded row\n        SubCell: (cellProps) => <div className=\"text-center\">|</div>,\n      },\n      {\n        Header: \"Type\",\n        accessor: \"item.name\",\n        Filter: textColumnFilter,\n        filter: \"text\",\n      },\n      {\n        Header: \"Category\",\n        accessor: \"item.cat\",\n        Filter: SelectColumnFilter,\n        filter: \"includes\",\n      },\n      {\n        Header: \"Quantity\",\n        accessor: \"quantity\",\n      },\n      {\n        Header: \"Location\",\n        accessor: \"location.name\",\n        Filter: SelectColumnFilter,\n        filter: \"includes\",\n      },\n    ],\n    []\n  );\n\n  if (corporation_id === 0) return <CorpLoader />;\n\n  return (\n    <ErrorBoundary>\n      <Panel.Body>\n        <BaseTable\n          asyncExpandFunction={renderRowSubComponent}\n          {...{ isLoading, isFetching, data, columns, error }}\n        />\n      </Panel.Body>\n    </ErrorBoundary>\n  );\n};\n\nexport default CorpAssetTable;\n","import React, { useState } from \"react\";\nimport { Checkbox, Panel } from \"react-bootstrap\";\nimport CorpAssetLocSelect from \"../components/CorpAssetLocSelect\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport CorpSelect from \"../components/CorpSelect\";\nimport CorpAssetTable from \"../components/CorpAssetTable\";\n\nconst CorpAssetLists = () => {\n  const [location, setLocation] = useState(0);\n  const [corporation_id, setCorp] = useState(0);\n  const [new_type, setAPI] = useState(true);\n\n  return (\n    <ErrorBoundary>\n      <Panel.Body className=\"flex-container-vert-fill\">\n        <CorpSelect setCorporation={setCorp} />\n        <div class=\"text-center\">\n          <Checkbox\n            onChange={(e) => setAPI(e.target.checked)}\n            defaultChecked={new_type}\n          >\n            Use New Location API\n          </Checkbox>\n        </div>\n        <CorpAssetLocSelect\n          corporation_id={corporation_id}\n          setLocation={setLocation}\n        />\n        <CorpAssetTable\n          corporation_id={corporation_id}\n          location_id={location}\n          new_type={new_type}\n        />\n      </Panel.Body>\n    </ErrorBoundary>\n  );\n};\n\nexport default CorpAssetLists;\n","import React from \"react\";\nimport { Panel } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport { loadWallet } from \"../apis/Corporation\";\nimport { BaseTable, SelectColumnFilter, textColumnFilter } from \"./BaseTable\";\n\nconst CorpWalletTable = ({ corporation_id, refTypes = \"\", page = 1 }) => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"wallet\", { corporation_id, refTypes, page }],\n    () => loadWallet(corporation_id, refTypes, page),\n    {\n      initialData: [],\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"Date\",\n        accessor: \"date\",\n        Cell: (props) => <div> {new Date(props.value).toLocaleString()} </div>,\n      },\n      {\n        Header: \"Type\",\n        accessor: \"ref_type\",\n        Filter: SelectColumnFilter,\n        filter: \"includes\",\n      },\n      {\n        Header: \"Division\",\n        accessor: \"division\",\n        Filter: SelectColumnFilter,\n        filter: \"includes\",\n      },\n      {\n        Header: \"First Party\",\n        accessor: \"first_party.name\",\n        Filter: SelectColumnFilter,\n        filter: \"includes\",\n      },\n      {\n        Header: \"Second Party\",\n        accessor: \"second_party.name\",\n        Filter: SelectColumnFilter,\n        filter: \"includes\",\n      },\n      {\n        Header: \"Amount\",\n        accessor: \"amount\",\n        Cell: (props) => <div> {props.value.toLocaleString()} </div>,\n      },\n      {\n        Header: \"Ballance\",\n        accessor: \"balance\",\n        Cell: (props) => <div> {props.value.toLocaleString()} </div>,\n      },\n      {\n        Header: \"Reason\",\n        accessor: \"reason\",\n        Filter: textColumnFilter,\n        filter: \"text\",\n      },\n    ],\n    []\n  );\n\n  return (\n    <ErrorBoundary>\n      <Panel.Body>\n        <BaseTable {...{ isLoading, isFetching, data, columns, error }} />\n      </Panel.Body>\n    </ErrorBoundary>\n  );\n};\n\nexport default CorpWalletTable;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport { loadRefTypes } from \"../../apis/Corporation\";\nimport { useQuery } from \"react-query\";\n\nconst colourStyles = {\n  option: (styles) => {\n    return {\n      ...styles,\n      color: \"black\",\n    };\n  },\n};\n\nexport const RefTypeSelect = ({ setFilter, labelText }) => {\n  const { isFetching, data } = useQuery([\"ref_types\"], () => loadRefTypes(), {\n    initialData: [],\n  });\n  let options = data.map((ref) => {\n    return {\n      value: ref,\n      label: ref,\n    };\n  });\n  return (\n    <div className=\"flex-label-container\">\n      <div className=\"flex-label\">\n        <h5>{labelText}</h5>\n      </div>\n      <Select\n        className=\"flex-select\"\n        styles={colourStyles}\n        options={options}\n        isLoading={isFetching}\n        isMulti={true}\n        onChange={setFilter}\n      />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Panel } from \"react-bootstrap\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport CorpSelect from \"../components/CorpSelect\";\nimport CorpWalletTable from \"../components/CorpWalletTable\";\nimport { RefTypeSelect } from \"../components/filters/RefTypeFilters\";\nimport { CorpLoader } from \"../components/NoCorp\";\n\nconst CorpWallet = () => {\n  const [corporation_id, setCorp] = useState(0);\n  const [ref_types, setRefs] = useState(\"\");\n\n  const RefsToState = (entry) => {\n    let values = entry.map((o) => {\n      return o.value;\n    });\n    console.log(values.sort().join(\",\"));\n    setRefs(values.sort().join(\",\"));\n  };\n  return (\n    <ErrorBoundary>\n      <Panel.Body className=\"flex-container-vert-fill\">\n        <RefTypeSelect\n          labelText={\"Reference Type Filter\"}\n          setFilter={RefsToState}\n        />\n        <CorpSelect setCorporation={setCorp} />\n        {corporation_id && ref_types !== \"\" ? (\n          <CorpWalletTable\n            corporation_id={corporation_id}\n            refTypes={ref_types}\n          />\n        ) : (\n          <CorpLoader />\n        )}\n      </Panel.Body>\n    </ErrorBoundary>\n  );\n};\n\nexport default CorpWallet;\n","import React from \"react\";\nimport { Label, Tooltip, OverlayTrigger, ProgressBar } from \"react-bootstrap\";\nimport \"./BridgeLink.css\";\n\nfunction MyTooltip({ message }) {\n  return <Tooltip id=\"tooltip\">{message}</Tooltip>;\n}\n\nexport const BridgeLink = ({\n  start = { known: false },\n  end = { known: false },\n}) => {\n  return (\n    <div class=\"bridge-div flex-container col-xs-12\">\n      {start.known ? (\n        <>\n          <div\n            className={`start ${\n              start.active ? \"gate-active\" : \"gate-inactive\"\n            }`}\n          >\n            <h4>{start.system_name}</h4>\n            <p>{start.name}</p>\n          </div>\n\n          <div className=\"flex-container-vert-fill\">\n            <Label\n              className=\"flex-child\"\n              bsStyle={start.ozone > 2500000 ? \"info\" : \"danger\"}\n            >\n              {\" \"}\n              Ozone: {start.ozone.toLocaleString()}\n            </Label>\n            <Label\n              className=\"flex-child\"\n              bsStyle={start.expires > 13 ? \"info\" : \"danger\"}\n            >\n              {\" \"}\n              Fuel: {start.expires} days\n            </Label>\n          </div>\n          {start.active ? (\n            <></>\n          ) : (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={MyTooltip({ message: \"Gate Offline!\" })}\n            >\n              <i class=\"far fa-times-circle\"></i>\n            </OverlayTrigger>\n          )}\n        </>\n      ) : (\n        <>\n          <div className=\"end gate-inactive\">\n            <h4>Unknown</h4>\n          </div>\n          <i class=\"flex-child far fa-question-circle\"></i>\n        </>\n      )}\n      <div class=\"\" style={{ flexGrow: \"5\", textAlign: \"center\" }}>\n        <ProgressBar\n          style={{ margin: \"auto\", marginLeft: \"5px\", marginRight: \"5px\" }}\n          active={\n            end.known && start.known\n              ? end.active && start.active\n                ? true\n                : end.active || start.activefalse\n                ? true\n                : false\n              : true\n          }\n          bsStyle={\n            end.known && start.known\n              ? end.active && start.active\n                ? \"success\"\n                : end.active || start.activefalse\n                ? \"warning\"\n                : \"danger\"\n              : \"warning\"\n          }\n          now={100}\n        />\n      </div>\n      {end.known ? (\n        <>\n          {end.active ? (\n            <></>\n          ) : (\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={MyTooltip({ message: \"Gate Offline!\" })}\n            >\n              <i class=\"far fa-times-circle\"></i>\n            </OverlayTrigger>\n          )}\n\n          <div className=\"flex-container-vert-fill\">\n            <Label\n              className=\"flex-child\"\n              bsStyle={end.ozone > 2500000 ? \"info\" : \"danger\"}\n            >\n              {\" \"}\n              Ozone: {end.ozone.toLocaleString()}\n            </Label>\n            <Label\n              className=\"flex-child\"\n              bsStyle={end.expires > 13 ? \"info\" : \"danger\"}\n            >\n              {\" \"}\n              Fuel: {end.expires} Days\n            </Label>\n          </div>\n          <div\n            className={`end ${end.active ? \"gate-active\" : \"gate-inactive\"}`}\n          >\n            <h4>{end.system_name}</h4>\n            <p>{end.name}</p>\n          </div>\n        </>\n      ) : (\n        <>\n          <OverlayTrigger\n            placement=\"top\"\n            overlay={MyTooltip({\n              message: \"Gate not found in the Audit Module!\",\n            })}\n          >\n            <i class=\"flex-child far fa-question-circle\"></i>\n          </OverlayTrigger>\n\n          <div className=\"end gate-unknown\">\n            <h4>Unknown</h4>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Panel } from \"react-bootstrap\";\nimport \"./PanelLoader.css\";\n\nexport const DataMessage = ({ text = \"No Data Found.\" }) => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <div className=\"text-center\">\n        <div className=\"error-size bottom-text\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100\"\n            height=\"100\"\n            fill=\"currentColor\"\n            class=\"bi bi-boxes\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M7.752.066a.5.5 0 0 1 .496 0l3.75 2.143a.5.5 0 0 1 .252.434v3.995l3.498 2A.5.5 0 0 1 16 9.07v4.286a.5.5 0 0 1-.252.434l-3.75 2.143a.5.5 0 0 1-.496 0l-3.502-2-3.502 2.001a.5.5 0 0 1-.496 0l-3.75-2.143A.5.5 0 0 1 0 13.357V9.071a.5.5 0 0 1 .252-.434L3.75 6.638V2.643a.5.5 0 0 1 .252-.434L7.752.066ZM4.25 7.504 1.508 9.071l2.742 1.567 2.742-1.567L4.25 7.504ZM7.5 9.933l-2.75 1.571v3.134l2.75-1.571V9.933Zm1 3.134 2.75 1.571v-3.134L8.5 9.933v3.134Zm.508-3.996 2.742 1.567 2.742-1.567-2.742-1.567-2.742 1.567Zm2.242-2.433V3.504L8.5 5.076V8.21l2.75-1.572ZM7.5 8.21V5.076L4.75 3.504v3.134L7.5 8.21ZM5.258 2.643 8 4.21l2.742-1.567L8 1.076 5.258 2.643ZM15 9.933l-2.75 1.571v3.134L15 13.067V9.933ZM3.75 14.638v-3.134L1 9.933v3.134l2.75 1.571Z\" />\n          </svg>\n        </div>\n        <h3 className=\"text-margin\">{text}</h3>\n      </div>\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { Panel, Label, Glyphicon } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { loadBridges } from \"../apis/Corporation\";\nimport { BridgeLink } from \"../components/BridgeLink\";\nimport { ErrorLoader } from \"../components/ErrorLoader\";\nimport { PanelLoader } from \"../components/PanelLoader\";\nimport { DataMessage } from \"../components/NoData\";\n\nexport const Bridges = () => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"bridges\"],\n    () => loadBridges(),\n    { initialData: [] }\n  );\n\n  if (isLoading) return <PanelLoader />;\n\n  if (error) return <ErrorLoader />;\n\n  return data.length > 0 ? (\n    <>\n      <Panel.Heading>Jump Bridge Network</Panel.Heading>\n      <Panel.Body className=\"flex-container\">\n        <div className=\"flex-container\">\n          <p\n            bsSize=\"small\"\n            className=\"gate-active\"\n            style={{\n              margin: \"15px\",\n              borderBottom: \"3px dotted\",\n            }}\n          >\n            Gate Online\n          </p>\n          <p\n            bsSize=\"small\"\n            className=\"gate-inactive\"\n            style={{\n              margin: \"15px\",\n              borderBottom: \"3px dotted\",\n            }}\n          >\n            Gate Offline\n          </p>{\" \"}\n          <p\n            bsSize=\"small\"\n            className=\"gate-unknown\"\n            style={{\n              margin: \"15px\",\n              borderBottom: \"3px dotted\",\n            }}\n          >\n            Gate Unknown\n          </p>\n          <Label\n            bsStyle=\"info\"\n            bsSize=\"small\"\n            style={{\n              margin: \"15px\",\n            }}\n          >\n            Lo/Fuel Level Ok\n          </Label>\n          <Label\n            bsStyle=\"danger\"\n            bsSize=\"small\"\n            style={{\n              margin: \"15px\",\n            }}\n          >\n            Lo/Fuel Level Low\n          </Label>\n        </div>\n        {isFetching && (\n          <Glyphicon\n            className=\"glyphicon-refresh-animate pull-right\"\n            glyph=\"refresh\"\n          />\n        )}\n\n        <hr className=\"col-xs-12\" />\n\n        {data\n          .sort((a, b) => {\n            let levels_a = [];\n            let levels_b = [];\n\n            a.start.known && levels_a.push(a.start.ozone);\n            a.end.known && levels_a.push(a.end.ozone);\n            b.start.known && levels_b.push(b.start.ozone);\n            b.end.known && levels_b.push(b.end.ozone);\n\n            if (Math.min(...levels_a) > Math.min(...levels_b)) {\n              return 1;\n            } else if (Math.min(...levels_a) < Math.min(...levels_b)) {\n              return -1;\n            } else {\n              return 0;\n            }\n          })\n          .map((bridgePair) => {\n            return <BridgeLink start={bridgePair.start} end={bridgePair.end} />;\n          })}\n      </Panel.Body>\n    </>\n  ) : isFetching ? (\n    <PanelLoader />\n  ) : (\n    <DataMessage text=\"No Bridges Found\" />\n  );\n};\n","import React, { useState } from \"react\";\nimport { Panel, Glyphicon, Table, Label } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport Select from \"react-select\";\nimport { loadSov } from \"../apis/Corporation\";\nimport { ErrorLoader } from \"../components/ErrorLoader\";\nimport { DataMessage } from \"../components/NoData\";\nimport { PanelLoader } from \"../components/PanelLoader\";\n\nconst colourStyles = {\n  option: (styles) => {\n    return {\n      ...styles,\n      color: \"black\",\n    };\n  },\n};\n\nexport const Sov = () => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"sov\"],\n    () => loadSov() //,\n    //{ initialData: [] }\n  );\n  const [regionFilter, setRegion] = useState(\"\");\n  const [constellationFilter, setConstellation] = useState(\"\");\n\n  const [upgradesFilter, setUpgrades] = useState([]);\n  const [stateFilter, setState] = useState([]);\n\n  const stateToState = (entry) => {\n    let values = entry.map((o) => {\n      return o.value;\n    });\n    setState(values);\n  };\n\n  const upgradesToState = (entry) => {\n    let values = entry.map((o) => {\n      return o.value;\n    });\n    setUpgrades(values);\n  };\n\n  const regionToState = (entry) => {\n    let values = entry.map((o) => {\n      return o.value;\n    });\n    setRegion(values);\n  };\n\n  const constellationToState = (entry) => {\n    let values = entry.map((o) => {\n      return o.value;\n    });\n    setConstellation(values);\n  };\n\n  if (isLoading) return <PanelLoader />;\n\n  if (error) return <ErrorLoader />;\n\n  let _upgrades = new Set();\n  let _state = new Set();\n\n  let _region = new Set();\n  let _constellation = new Set();\n  let _system = new Set();\n\n  data.map((system) => {\n    system.upgrades.map((upgrade) => {\n      _upgrades.add(upgrade.name);\n      _state.add(upgrade.active);\n      return false;\n    });\n    _region.add(system.system.rgn);\n    _constellation.add(system.system.const);\n    _system.add(system.system.system);\n    return false;\n  });\n\n  let viewData = data.filter((system) => {\n    if (regionFilter.length) {\n      if (!regionFilter.includes(system.system.rgn)) {\n        return false;\n      }\n    }\n    if (constellationFilter.length) {\n      if (!constellationFilter.includes(system.system.const)) {\n        return false;\n      }\n    }\n    if (upgradesFilter.length) {\n      let upgrades = system.upgrades.reduce((last, next) => {\n        last.push(next.name);\n        return last;\n      }, []);\n      return upgradesFilter.every((i) => upgrades.includes(i));\n    }\n    return true;\n  });\n  viewData = viewData.filter((system) => {\n    if (stateFilter.length) {\n      let states = system.upgrades.reduce((last, next) => {\n        if (upgradesFilter.length) {\n          if (upgradesFilter.includes(next.name)) {\n            last.push(next.active);\n          }\n        } else {\n          last.push(next.active);\n        }\n        return last;\n      }, []);\n      return stateFilter.reduce((i, n) => i || states.includes(n), false);\n    }\n    return true;\n  });\n  return data.length > 0 ? (\n    <>\n      <Panel.Heading>Sov Upgrades</Panel.Heading>\n      <Panel.Body className=\"flex-container\">\n        <div className=\"flex-label-container col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"flex-label\">\n            <h5>Region Filter</h5>\n          </div>\n          <Select\n            className=\"flex-select\"\n            styles={colourStyles}\n            options={Array.from(_region, (u) => {\n              return {\n                value: u,\n                label: u,\n              };\n            }).sort((a, b) =>\n              a.value > b.value ? 1 : b.value > a.value ? -1 : 0\n            )}\n            isLoading={isFetching}\n            isMulti={true}\n            onChange={regionToState}\n          />\n        </div>\n        <div className=\"flex-label-container col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"flex-label\">\n            <h5>Constellation Filter</h5>\n          </div>\n          <Select\n            className=\"flex-select\"\n            styles={colourStyles}\n            style={{ width: \"300px\" }}\n            options={Array.from(_constellation, (u) => {\n              return {\n                value: u,\n                label: u,\n              };\n            }).sort((a, b) =>\n              a.value > b.value ? 1 : b.value > a.value ? -1 : 0\n            )}\n            isLoading={isFetching}\n            isMulti={true}\n            onChange={constellationToState}\n          />\n        </div>\n        <div className=\"flex-label-container col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"flex-label\">\n            <h5>Upgrade Name Filter</h5>\n          </div>\n          <Select\n            className=\"flex-select\"\n            styles={colourStyles}\n            style={{ width: \"300px\" }}\n            options={Array.from(_upgrades, (u) => {\n              return {\n                value: u,\n                label: u,\n              };\n            }).sort((a, b) =>\n              a.value > b.value ? 1 : b.value > a.value ? -1 : 0\n            )}\n            isLoading={isFetching}\n            isMulti={true}\n            onChange={upgradesToState}\n          />\n        </div>\n        <div className=\"flex-label-container col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"flex-label\">\n            <h5>Upgrade State Filter</h5>\n          </div>\n          <Select\n            className=\"flex-select\"\n            styles={colourStyles}\n            style={{ width: \"300px\" }}\n            options={Array.from(_state, (u) => {\n              return {\n                value: u,\n                label: u,\n              };\n            }).sort((a, b) =>\n              a.value > b.value ? 1 : b.value > a.value ? -1 : 0\n            )}\n            isLoading={isFetching}\n            isMulti={true}\n            onChange={stateToState}\n          />\n        </div>\n        <hr className=\"col-xs-12\" />\n        {viewData\n          .sort((a, b) =>\n            a.system.name > b.system.name\n              ? 1\n              : b.system.name > a.system.name\n              ? -1\n              : 0\n          )\n          .map((system) => {\n            return (\n              <Panel key={`panel ${system.system.name}`} className=\"flex-child\">\n                <Panel.Heading>\n                  <h4 className={\"text-center\"}>\n                    {system.system.name}\n                    {isFetching && (\n                      <Glyphicon\n                        className=\"glyphicon-refresh-animate pull-right\"\n                        glyph=\"refresh\"\n                      />\n                    )}\n                  </h4>\n                </Panel.Heading>\n                <Panel.Body className=\"flex-body\">\n                  <p className=\"text-center\">\n                    <Label>Constellation: {system.system.const}</Label>{\" \"}\n                    <Label>Region: {system.system.rgn}</Label>\n                  </p>\n                  <Table striped style={{ marginBottom: 0 }}>\n                    <thead>\n                      <tr key=\"head\">\n                        <th>Upgrade</th>\n                        <th className=\"text-right\">Active</th>\n                      </tr>\n                    </thead>\n                  </Table>\n                  <div\n                    className={`table-div ${\n                      (stateFilter.length || upgradesFilter.length) &&\n                      \"table-div-no-hight\"\n                    }`}\n                  >\n                    <Table striped>\n                      <tbody>\n                        {system.upgrades\n                          .sort((a, b) =>\n                            a.name > b.name ? 1 : b.name > a.name ? -1 : 0\n                          )\n                          .map((u) => {\n                            if (upgradesFilter.length) {\n                              if (!upgradesFilter.includes(u.name)) {\n                                return <></>;\n                              }\n                            }\n                            if (stateFilter.length) {\n                              if (!stateFilter.includes(u.active)) {\n                                return <></>;\n                              }\n                            }\n                            let status = \"info\";\n                            if (u.active === \"StructureInactive\") {\n                              status = \"warning\";\n                            } else if (u.active === \"StructureOffline\") {\n                              status = \"danger\";\n                            }\n                            return (\n                              <tr className={status} key={u.name}>\n                                <td>{u.name}</td>\n                                <td className=\"text-right\">{u.active}</td>\n                              </tr>\n                            );\n                          })}\n                      </tbody>\n                    </Table>\n                  </div>\n                </Panel.Body>\n              </Panel>\n            );\n          })}\n      </Panel.Body>\n    </>\n  ) : isFetching ? (\n    <PanelLoader />\n  ) : (\n    <DataMessage text=\"No IHubs Found\" />\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { CorpStructures } from \"./pages/Structures\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Panel } from \"react-bootstrap\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CorpMenu from \"./components/CorpMenu\";\nimport CorpStatus from \"./pages/Status\";\nimport \"./style.css\";\nimport CorpAssets from \"./pages/Assets\";\nimport CorpAssetLists from \"./pages/AssetList\";\nimport CorpWallet from \"./pages/Wallets\";\nimport { Bridges } from \"./pages/Bridges\";\nimport { Sov } from \"./pages/Sov\";\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <QueryClientProvider client={queryClient}>\n        <br />\n        <CorpMenu />\n        <Panel bsStyle=\"default\">\n          <Switch>\n            <Route\n              exact\n              path={[\"\", \"/structures\"]}\n              component={() => CorpStructures()}\n            />\n            <Route path={\"/wallets\"} component={() => CorpWallet()} />\n            <Route path={\"/status\"} component={() => CorpStatus()} />\n            <Route path={\"/assetgroup\"} component={() => CorpAssets()} />\n            <Route path={\"/assetlist\"} component={() => CorpAssetLists()} />\n            <Route path={\"/bridges\"} component={() => Bridges()} />\n            <Route path={\"/sov\"} component={() => Sov()} />\n          </Switch>\n        </Panel>\n      </QueryClientProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}
