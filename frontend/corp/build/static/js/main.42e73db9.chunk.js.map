{"version":3,"sources":["reportWebVitals.js","apis/Structures.js","components/ErrorLoader.js","components/BaseTable.js","components/EveImages.js","pages/Structures.js","components/NavLinkActive.js","apis/Corporation.js","components/CorpBadge.js","components/CorpMenu.js","components/PanelLoader.js","pages/Status.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","a","axios","get","api","console","log","data","defaults","xsrfHeaderName","ErrorLoader","Panel","Body","className","xmlns","width","height","fill","class","viewBox","d","colourStyles","option","styles","color","MyTooltip","message","Tooltip","id","DefaultColumnFilter","column","filterValue","preFilteredRows","setFilter","textColumnFilter","count","length","value","onChange","e","target","undefined","placeholder","SelectColumnFilter","options","React","useMemo","Set","forEach","row","values","add","title","label","defaultValue","concat","map","o","i","defaultPropGetter","BaseTable","isLoading","isFetching","error","columns","getRowProps","defaultColumn","Filter","filterTypes","text","rows","ids","filter","some","rowValue","name","toLowerCase","includes","useTable","initialState","pageSize","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","Table","striped","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","canSort","isSorted","isSortedDesc","Glyphicon","glyph","canFilter","cells","cell","style","verticalAlign","getCellProps","ButtonToolbar","ButtonGroup","Button","bsStyle","onClick","disabled","active","SplitButton","onSelect","Number","MenuItem","eventKey","OverlayTrigger","placement","overlay","Date","toLocaleString","CorporationLogo","corporation_id","size","Image","src","TypeIcon","type_id","TimeAgo","addDefaultLocale","en","CorpStructures","useQuery","loadStructures","initialData","valueSort","rowA","rowB","columnId","b","Header","accessor","Cell","props","href","replace","disableSortBy","corporation_name","sortType","ReactTimeAgo","date","service","reduce","p","c","Label","NavLink","location","useLocation","useEffect","window","endsWith","NavItem","children","contextTypes","router","PropTypes","object","Array","from","Object","keys","last_updates","err","sort","corps","postCorporationRefresh","post","cookies","getItem","CorpBadge","mutate","useMutation","CorpMenu","Navbar","fluid","collapseOnSelect","Brand","Toggle","Collapse","Nav","PanelLoader","CorpStatus","loadStatus","corp","Heading","corporation","marginBottom","h","parse","queryClient","QueryClient","ReactDOM","StrictMode","client","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.42e73db9.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\nexport async function loadStructures() {\n  const api = await axios.get(`/audit/api/corp/structures`);\n  console.log(`get structures in api 1`);\n  return api.data;\n}\n","import React from \"react\";\nimport { Panel } from \"react-bootstrap\";\nimport \"./PanelLoader.css\";\n\nexport const ErrorLoader = () => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <div className=\"text-center\">\n        <div className=\"error-size bottom-text\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"100\"\n            height=\"100\"\n            fill=\"currentColor\"\n            class=\"bi bi-exclamation-triangle error-anim\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z\" />\n            <path d=\"M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z\" />\n          </svg>\n        </div>\n        <h3 className=\"text-margin\">Error Loading Component</h3>\n      </div>\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { Button, Tooltip, OverlayTrigger } from \"react-bootstrap\";\nimport { useTable, useFilters, usePagination, useSortBy } from \"react-table\";\nimport Select from \"react-select\";\nimport { Bars } from \"@agney/react-loading\";\nimport {\n  ButtonToolbar,\n  ButtonGroup,\n  Glyphicon,\n  MenuItem,\n  SplitButton,\n  Table,\n} from \"react-bootstrap\";\nimport \"./BaseTable.css\";\nimport { ErrorLoader } from \"./ErrorLoader\";\n\nexport const colourStyles = {\n  option: (styles) => {\n    return {\n      ...styles,\n      color: \"black\",\n    };\n  },\n};\n\nfunction MyTooltip({ message }) {\n  return <Tooltip id=\"character_tooltip\">{message}</Tooltip>;\n}\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  return <></>;\n}\n\nexport function textColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <input\n      className=\"form-control\"\n      value={filterValue || \"\"}\n      onChange={(e) => {\n        setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  );\n}\n\n// This is a custom filter UI for selecting\n// a unique option from a list\nexport function SelectColumnFilter({\n  column: { setFilter, filterValue, preFilteredRows, id },\n}) {\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  const options = React.useMemo(() => {\n    const options = new Set();\n    if (!preFilteredRows) {\n      return [];\n    }\n    preFilteredRows.forEach((row) => {\n      if (row.values[id] !== null) {\n        if (typeof row.values[id] === \"object\") {\n          options.add(row.values[id][\"name\"]);\n        } else {\n          options.add(row.values[id]);\n        }\n      }\n    });\n    return [...options.values()];\n  }, [id, preFilteredRows]);\n\n  // Render a multi-select box\n  return (\n    <Select\n      key={filterValue}\n      title={filterValue}\n      onChange={(e) => setFilter(e.value)}\n      value={{ label: filterValue || \"All\" }}\n      defaultValue={{ label: \"All\" }}\n      styles={colourStyles}\n      options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n        options.map((o, i) => {\n          return { id: i, value: o, label: o };\n        })\n      )}\n    />\n  );\n}\n\nconst defaultPropGetter = () => ({});\n\nexport const BaseTable = ({\n  isLoading,\n  isFetching,\n  data,\n  error,\n  columns,\n  getRowProps = defaultPropGetter,\n}) => {\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  const filterTypes = React.useMemo(\n    () => ({\n      text: (rows, ids, filterValue) => {\n        return rows.filter((row) => {\n          return ids.some((id) => {\n            if (!filterValue) {\n              return true;\n            } else {\n              let rowValue = row.values[id];\n              if (typeof rowValue === \"object\") {\n                rowValue = rowValue.name;\n              }\n              return rowValue\n                ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                : false;\n            }\n          });\n        });\n      },\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn,\n      filterTypes,\n      initialState: { pageSize: 20 },\n    },\n    useFilters,\n    useSortBy,\n    usePagination\n  );\n\n  if (isLoading)\n    return (\n      <div className=\"col-xs-12 text-center\">\n        <Bars className=\"spinner-size\" />\n      </div>\n    );\n\n  if (error) return <ErrorLoader />;\n\n  return (\n    <>\n      <Table striped>\n        <thead {...getTableProps()}>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render(\"Header\")}\n                  {/* Add a sort direction indicator */}\n                  <span className=\"pull-right\">\n                    {column.canSort ? (\n                      column.isSorted ? (\n                        column.isSortedDesc ? (\n                          <Glyphicon glyph=\"sort-by-attributes-alt\" />\n                        ) : (\n                          <Glyphicon glyph=\"sort-by-attributes\" />\n                        )\n                      ) : (\n                        <Glyphicon glyph=\"sort\" />\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>\n                  <div>{column.canFilter ? column.render(\"Filter\") : null}</div>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps(getRowProps(row))}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td\n                      style={{ verticalAlign: \"middle\" }}\n                      {...cell.getCellProps()}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <div className=\"pagination pull-right\">\n        <ButtonToolbar>\n          <ButtonGroup>\n            <Button\n              bsStyle=\"success\"\n              onClick={() => gotoPage(0)}\n              disabled={!canPreviousPage}\n            >\n              <Glyphicon glyph=\"step-backward\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => previousPage()}\n              disabled={!canPreviousPage}\n            >\n              <Glyphicon glyph=\"triangle-left\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => nextPage()}\n              disabled={!canNextPage}\n            >\n              <Glyphicon glyph=\"triangle-right\" />\n            </Button>{\" \"}\n            <Button\n              bsStyle=\"success\"\n              onClick={() => gotoPage(pageCount - 1)}\n              disabled={!canNextPage}\n            >\n              <Glyphicon glyph=\"step-forward\" />\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup>\n            <Button active bsStyle=\"success\">\n              {\"Page Size:\"}\n            </Button>{\" \"}\n            <SplitButton\n              id=\"pageSizeDropdown\"\n              bsStyle=\"success\"\n              title={pageSize}\n              onSelect={(e) => {\n                setPageSize(Number(e));\n              }}\n            >\n              {[20, 50, 100, 1000000].map((pageSize) => (\n                <MenuItem\n                  id={pageSize}\n                  key={pageSize}\n                  eventKey={pageSize}\n                  value={pageSize}\n                >\n                  Show {pageSize}\n                </MenuItem>\n              ))}\n            </SplitButton>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n      <div className=\"pagination pull-left\">\n        <ButtonGroup>\n          <Button active bsStyle=\"info\">\n            {\n              <>\n                {pageOptions.length > 0 ? (\n                  <>\n                    Page{\" \"}\n                    <strong>\n                      {pageIndex + 1} of {pageOptions.length}\n                    </strong>\n                  </>\n                ) : (\n                  <>\n                    Page <strong>- of -</strong>\n                  </>\n                )}\n              </>\n            }\n          </Button>{\" \"}\n          {isFetching ? (\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={MyTooltip({ message: \"Refreshing Data\" })}\n            >\n              <Button bsStyle=\"info\">\n                <Glyphicon\n                  className=\"glyphicon-refresh-animate\"\n                  glyph=\"refresh\"\n                />\n              </Button>\n            </OverlayTrigger>\n          ) : (\n            <OverlayTrigger\n              placement=\"bottom\"\n              overlay={MyTooltip({\n                message: \"Data Loaded: \" + new Date().toLocaleString(),\n              })}\n            >\n              <Button bsStyle=\"info\">\n                <Glyphicon glyph=\"ok\" />\n              </Button>\n            </OverlayTrigger>\n          )}\n        </ButtonGroup>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Image } from \"react-bootstrap\";\n\nexport const CharacterPortrait = ({ character_id, size = 256 }) => {\n  return (\n    <Image\n      src={`https://images.evetech.net/characters/${character_id}/portrait?size=${size}`}\n    />\n  );\n};\n\nexport const CorporationLogo = ({ corporation_id, size = 256 }) => {\n  return (\n    <Image\n      src={`https://images.evetech.net/corporations/${corporation_id}/logo?size=${size}`}\n    />\n  );\n};\n\nexport const AllianceLogo = ({ alliance_id, size = 256 }) => {\n  return (\n    <Image\n      src={`https://images.evetech.net/alliances/${alliance_id}/logo?size=${size}`}\n    />\n  );\n};\n\nexport const TypeIcon = ({ type_id, size = 64 }) => {\n  return (\n    <Image\n      className=\"img-circle\"\n      src={`https://images.evetech.net/types/${type_id}/icon?size=${size}`}\n    />\n  );\n};\n","import React from \"react\";\nimport { Panel, Label } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { loadStructures } from \"../apis/Structures\";\nimport Select from \"react-select\";\nimport {\n  BaseTable,\n  SelectColumnFilter,\n  textColumnFilter,\n  colourStyles,\n} from \"../components/BaseTable\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport { TypeIcon } from \"../components/EveImages\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en.json\";\nimport { CorporationLogo } from \"../components/EveImages\";\n\nTimeAgo.addDefaultLocale(en);\n\nexport const CorpStructures = () => {\n  const { isLoading, isFetching, error, data } = useQuery(\n    [\"stuctures\"],\n    () => loadStructures(),\n    {\n      initialData: [],\n    }\n  );\n\n  const valueSort = React.useMemo(\n    () => (rowA, rowB, columnId) => {\n      const a = rowA.values[columnId];\n      const b = rowB.values[columnId];\n      if ((a === null) | (b === null)) {\n        return 1; //null at end\n      }\n      return a > b ? 1 : -1;\n    },\n    []\n  );\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"System\",\n        accessor: \"location\",\n        Filter: SelectColumnFilter,\n        filter: \"text\",\n        Cell: (props) => (\n          <a\n            href={\n              \"https://evemaps.dotlan.net/system/\" +\n              props.value.name.replace(\" \", \"_\")\n            }\n          >\n            {props.value.name}\n          </a>\n        ),\n      },\n      {\n        Header: \"Structure\",\n        accessor: \"name\",\n        Filter: textColumnFilter,\n        filter: \"text\",\n      },\n      {\n        Header: \"Type\",\n        accessor: \"type\",\n        disableSortBy: true,\n        Filter: SelectColumnFilter,\n        filter: \"text\",\n        Cell: (props) => (\n          <div className=\"flex-image-text\">\n            <div className=\"pull-left\">\n              <TypeIcon type_id={props.value.id}></TypeIcon>\n            </div>\n            <div className=\"pull-left\">{props.value.name}</div>\n          </div>\n        ),\n      },\n      {\n        Header: \"Owner\",\n        accessor: \"owner\",\n        disableSortBy: true,\n        Filter: ({\n          column: { setFilter, filterValue, preFilteredRows, id },\n        }) => {\n          const options = React.useMemo(() => {\n            const options = new Set();\n            if (!preFilteredRows) {\n              return [];\n            }\n            preFilteredRows.forEach((row) => {\n              if (row.values[id] !== null) {\n                options.add(row.values[id].corporation_name);\n              }\n            });\n            return [...options.values()];\n          }, [id, preFilteredRows]);\n          return (\n            <Select\n              key={filterValue}\n              title={filterValue}\n              onChange={(e) => setFilter(e.value)}\n              value={{ label: filterValue || \"All\" }}\n              defaultValue={{ label: \"All\" }}\n              styles={colourStyles}\n              options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n                options.map((o, i) => {\n                  return { id: i, value: o, label: o };\n                })\n              )}\n            />\n          );\n        },\n        filter: (rows, ids, filterValue) => {\n          return rows.filter((row) => {\n            return ids.some((id) => {\n              if (!filterValue) {\n                return true;\n              } else {\n                let rowValue = row.values[id].corporation_name;\n                return rowValue\n                  ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                  : false;\n              }\n            });\n          });\n        },\n        Cell: (props) => (\n          <div className=\"flex-image-text\">\n            <div className=\"pull-left\">\n              <CorporationLogo\n                corporation_id={props.value.corporation_id}\n                size={32}\n              ></CorporationLogo>\n            </div>\n            <div className=\"pull-left\">{props.value.corporation_name}</div>\n          </div>\n        ),\n      },\n      {\n        Header: \"Fuel Expiry\",\n        accessor: \"fuel_expiry\",\n        sortType: valueSort,\n        Cell: (props) => (\n          <div>{props.value ? <ReactTimeAgo date={props.value} /> : \"\"}</div>\n        ),\n      },\n      {\n        Header: \"State\",\n        accessor: \"state\",\n        Filter: SelectColumnFilter,\n        disableSortBy: true,\n        filter: \"text\",\n      },\n      {\n        Header: \"Services\",\n        accessor: \"services\",\n        disableSortBy: true,\n        Filter: ({\n          column: { setFilter, filterValue, preFilteredRows, id },\n        }) => {\n          const options = React.useMemo(() => {\n            const options = new Set();\n            if (!preFilteredRows) {\n              return [];\n            }\n            preFilteredRows.forEach((row) => {\n              if (row.values[id] !== null) {\n                row.values[id].forEach((service) => {\n                  options.add(service.name);\n                });\n              }\n            });\n            return [...options.values()];\n          }, [id, preFilteredRows]);\n          return (\n            <Select\n              key={filterValue}\n              title={filterValue}\n              onChange={(e) => setFilter(e.value)}\n              value={{ label: filterValue || \"All\" }}\n              defaultValue={{ label: \"All\" }}\n              styles={colourStyles}\n              options={[{ id: -1, value: \"\", label: \"All\" }].concat(\n                options.map((o, i) => {\n                  return { id: i, value: o, label: o };\n                })\n              )}\n            />\n          );\n        },\n        filter: (rows, ids, filterValue) => {\n          return rows.filter((row) => {\n            return ids.some((id) => {\n              if (!filterValue) {\n                return true;\n              } else {\n                let rowValue = row.values[id].reduce((p, c) => {\n                  return p + \"  \" + c.name;\n                }, \"\");\n                return rowValue\n                  ? rowValue.toLowerCase().includes(filterValue.toLowerCase())\n                  : false;\n              }\n            });\n          });\n        },\n        Cell: (props) =>\n          props.value ? (\n            <div className=\"text-center\">\n              {props.value.map((service) => {\n                return (\n                  <Label\n                    className=\"padded-label\"\n                    bsStyle={service.state === \"online\" ? \"primary\" : \"danger\"}\n                  >\n                    {service.name}\n                  </Label>\n                );\n              })}\n            </div>\n          ) : (\n            <></>\n          ),\n      },\n    ],\n    [valueSort]\n  );\n\n  return (\n    <Panel.Body>\n      <BaseTable {...{ isLoading, isFetching, data, columns, error }} />\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { NavItem } from \"react-bootstrap\";\nimport { useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst NavLink = (props) => {\n  const location = useLocation();\n\n  useEffect(() => {}, [location]);\n\n  var isActive = window.location.href.endsWith(props.href);\n  var className = isActive ? \"active\" : \"\";\n\n  return (\n    <NavItem className={className} {...props}>\n      {props.children}\n    </NavItem>\n  );\n};\n\nNavLink.contextTypes = {\n  router: PropTypes.object,\n};\n\nexport default NavLink;\n","import axios from \"axios\";\nimport cookies from \"js-cookies\";\naxios.defaults.xsrfHeaderName = \"X-CSRFToken\";\n\n\nexport async function loadStatus() {\n  const api = await axios.get(`/audit/api/corp/list`);\n  console.log(`got corp status in api`);\n  const headers = Array.from(\n    new Set(\n      api.data.reduce((p, c) => {\n        try {\n          return p.concat(Object.keys(c.last_updates));\n        } catch (err) {\n          return p;\n        }\n      }, [])\n    )\n  );\n  headers.sort();\n\n  const data = {\n    corps: api.data,\n    headers: headers,\n  };\n  return data;\n}\n\n\nexport async function postCorporationRefresh() {\n  console.log(`Sent Corp refresh`);\n  const api = await axios.post(\n    `/audit/api/corporation/refresh`,\n    { headers: { \"X-CSRFToken\": cookies.getItem(\"csrftoken\") } }\n  );\n  return api.data;\n}\n","import React from \"react\";\n\nimport {\n  Glyphicon,\n  Tooltip,\n  OverlayTrigger,\n  NavItem,\n} from \"react-bootstrap\";\nimport { useMutation } from \"react-query\";\nimport { postCorporationRefresh } from \"../apis/Corporation\";\nfunction MyTooltip({ message }) {\n  return <Tooltip id=\"character_tooltip\">{message}</Tooltip>;\n}\n\nfunction CorpBadge() {\n  const { mutate } = useMutation(postCorporationRefresh);\n\n  return (\n    <>\n      <NavItem href=\"/audit/corp/add\">\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={MyTooltip({ message: \"Add New Token\" })}\n        >\n          <Glyphicon glyph=\"plus\" />\n        </OverlayTrigger>\n      </NavItem>\n      <NavItem onClick={() => mutate()}>\n          <Glyphicon glyph=\"refresh\" />\n      </NavItem>\n    </>\n  );\n}\n\nexport default CorpBadge;\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport NavLink from \"./NavLinkActive\";\nimport \"./Menu.css\";\nimport CorpBadge from \"./CorpBadge\";\n\nconst CorpMenu = () => {\n  return (\n    <Navbar fluid collapseOnSelect>\n      <Navbar.Header>\n        <Navbar.Brand>Corporation Audit</Navbar.Brand>\n        <Navbar.Toggle />\n      </Navbar.Header>\n      <Navbar.Collapse>\n        <Nav>\n          <NavLink key=\"Structures\" href={`#/structures`}>\n            Structures\n          </NavLink>\n          <NavLink key=\"Wallets\" href={`#/wallets`}>\n            Wallets\n          </NavLink>\n          <NavLink key=\"Assets\" href={`#/assets`}>\n            Assets\n          </NavLink>\n        </Nav>\n        <Nav className=\"pull-right\">\n          <CorpBadge />\n          <NavLink key=\"Status\" href={`#/status`}>\n            Corporations\n          </NavLink>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default CorpMenu;\n","import React from \"react\";\nimport { Bars } from \"@agney/react-loading\";\nimport { Panel } from \"react-bootstrap\";\nimport \"./PanelLoader.css\";\n\nexport const PanelLoader = () => {\n  return (\n    <Panel.Body className=\"flex-container\">\n      <Bars className=\"spinner-size\" />\n    </Panel.Body>\n  );\n};\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { Panel } from \"react-bootstrap\";\nimport ReactTimeAgo from \"react-time-ago\";\nimport { useQuery } from \"react-query\";\nimport { loadStatus } from \"../apis/Corporation\";\nimport { PanelLoader } from \"../components/PanelLoader\";\nimport { ErrorLoader } from \"../components/ErrorLoader\";\nimport { CorporationLogo } from \"../components/EveImages\";\n\nconst CorpStatus = () => {\n  const { isLoading, error, data } = useQuery([\"corp-status\"], () =>\n    loadStatus()\n  );\n\n  if (isLoading) return <PanelLoader />;\n\n  if (error) return <ErrorLoader />;\n\n  return (\n    <Panel.Body className=\"flex-container\">\n      {data.corps.map((corp) => {\n        return (\n          <Panel className={\"flex-child\"}>\n            <Panel.Heading>\n              <h4 className={\"text-center\"}>\n                {corp.corporation.corporation_name}\n              </h4>\n            </Panel.Heading>\n            <Panel.Body className=\"flex-body\">\n              <div className=\"text-center\">\n                <CorporationLogo\n                  corporation_id={corp.corporation.corporation_id}\n                  size={256}\n                />\n              </div>\n              <h4 className={\"text-center\"}>Update Status</h4>\n              <Table striped style={{ marginBottom: 0 }}>\n                <thead>\n                  <tr>\n                    <th>Update</th>\n                    <th className=\"text-right\">Last Run</th>\n                  </tr>\n                </thead>\n              </Table>\n              <div className={\"table-div\"}>\n                <Table striped>\n                  <tbody>\n                    {data.headers.map((h) => {\n                      return (\n                        <tr>\n                          <td>{h}</td>\n                          <td className=\"text-right\">\n                            {corp.last_updates[h] ? (\n                              <ReactTimeAgo\n                                date={Date.parse(corp.last_updates[h])}\n                              />\n                            ) : (\n                              <>{\"Never\"}</>\n                            )}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </div>\n            </Panel.Body>\n          </Panel>\n        );\n      })}\n    </Panel.Body>\n  );\n};\n\nexport default CorpStatus;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { CorpStructures } from \"./pages/Structures\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { Panel } from \"react-bootstrap\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ErrorLoader } from \"./components/ErrorLoader\";\nimport CorpMenu from \"./components/CorpMenu\";\nimport CorpStatus from \"./pages/Status\";\nimport \"./style.css\"\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <QueryClientProvider client={queryClient}>\n        <br />\n        <CorpMenu />\n        <Panel bsStyle=\"default\">\n          <Switch>\n            <Route\n              exact\n              path={[\"\", \"/structures\"]}\n              component={() => CorpStructures()}\n            />\n            <Route path={\"/wallets\"} component={() => ErrorLoader()} />\n            <Route path={\"/status\"} component={() => CorpStatus()} />\n            <Route path={\"/assets\"} component={() => ErrorLoader()} />\n          </Switch>\n        </Panel>\n      </QueryClientProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}
